# Generated by Django 4.2.3 on 2023-09-20 09:40

from django.db import migrations
import pandas as pd
from system_management.constants import (
    PERSONAL, 
    BUSINESS
)


def create_cause_personal(apps, schema_editor):
    CauseCategory = apps.get_model('claims', 'CauseCategory')
    ApplicationType = apps.get_model('application', 'ApplicationType')

    application_type = ApplicationType.objects.get(name = PERSONAL)
    CauseCategory.objects.create(
        application_type_id = application_type.id,
        name = "Property Damage"
    )

    CauseCategory.objects.create(
        application_type_id = application_type.id,
        name = "Property Loss"
    )

    CauseCategory.objects.create(
        application_type_id = application_type.id,
        name = "Motor"
    )

    CauseCategory.objects.create(
        application_type_id = application_type.id,
        name = "Financial Loss"
    )


def create_cause_business(apps, schema_editor):
    CauseCategory = apps.get_model('claims', 'CauseCategory')
    ApplicationType = apps.get_model('application', 'ApplicationType')

    application_type = ApplicationType.objects.get(name = BUSINESS)
    CauseCategory.objects.create(
        application_type_id = application_type.id,
        name = "Property Damage"
    )

    CauseCategory.objects.create(
        application_type_id = application_type.id,
        name = "Property Loss"
    )

    CauseCategory.objects.create(
        application_type_id = application_type.id,
        name = "Motor"
    )
    
    CauseCategory.objects.create(
        application_type_id = application_type.id,
        name = "Financial Loss"
    )


def create_how_and_cause_personal(apps, schema_editor):
    HowCategory = apps.get_model('claims', 'HowCategory')
    CauseCategory = apps.get_model('claims', 'CauseCategory')
    HowQuestionTitle = apps.get_model('claims', 'HowQuestionTitle')
    HowQuestionOption = apps.get_model('claims', 'HowQuestionOption')
    HowQuestion = apps.get_model('claims', 'HowQuestion')
    
    items = [
                ('Hijacking', 'Financial Loss'), 
                ('Theft', 'Financial Loss'),
                ('Accidental Damage', 'Property Damage'), 
                ('Armed Robbery', 'Property Damage'),
                ('Burglary', 'Property Damage'),
                ('Collision', 'Property Damage'), 
                ('Earthquake', 'Property Damage'),
                ('Explosion', 'Property Damage'), 
                ('Fire', 'Property Damage'),
                ('Hail or Snow', 'Property Damage'), 
                ('Hijacking', 'Property Damage'),
                ('Lightning', 'Property Damage'), 
                ('Malicious Damage', 'Property Damage'),
                ('Overturning', 'Property Damage'), 
                ('Power Surge', 'Property Damage'),
                ('Storm', 'Property Damage'), 
                ('Theft', 'Property Damage'),
                ('Riot or Unrest', 'Property Damage'),
                ('Water', 'Property Damage'), 
                ('Wind', 'Property Damage'),
                ('Accidental Damage', 'Property Loss'), 
                ('Armed Robbery', 'Property Loss'),
                ('Burglary', 'Property Loss'),
                ('Collision', 'Property Loss'), 
                ('Earthquake', 'Property Loss'),
                ('Explosion', 'Property Loss'), 
                ('Fire', 'Property Loss'),
                ('Hail or Snow', 'Property Loss'), 
                ('Hijacking', 'Property Loss'),
                ('Lightning', 'Property Loss'), 
                ('Malicious Damage', 'Property Loss'),
                ('Overturning', 'Property Loss'), 
                ('Power Surge', 'Property Loss'),
                ('Storm', 'Property Loss'), 
                ('Theft', 'Property Loss'),
                ('Riot or Unrest', 'Property Loss'),
                ('Water', 'Property Loss'), 
                ('Wind', 'Property Loss'),
                ('Accidental - Own Damage', 'Motor'), 
                ('Accident - 3rd Party Damage', 'Motor'),
                ('Theft and Recovered', 'Motor'), 
                ('Hijacking', 'Motor'), 
                ('Theft', 'Motor'),
                ('Accidental - Own Damage', 'Financial Loss'),
                ('Accident - 3rd Party Damage', 'Financial Loss'),
                ('Theft and Recovered', 'Financial Loss') 
            ]
    for item in items:
        how_category = HowCategory.objects.create(
            cause=CauseCategory.objects.get(
                name=item[1],
                application_type_id__name = PERSONAL
                ),
            name=item[0]
        ) 

        if item[1] == 'Financial Loss':
            
            how_title = HowQuestionTitle.objects.create(
                title='Financial Records',
                how_id = how_category.id
            )

            records_available = HowQuestion.objects.create(
                question='Available',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=records_available, option='Yes')
            HowQuestionOption.objects.create(question=records_available, option='No')
        
            how_title = HowQuestionTitle.objects.create(
                title='Calculations',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Name',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestion.objects.create(
                question='Amount',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Amount Claimed',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Amount Claimed',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Policy',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Insurer',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Policy number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Sum Insured',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Excess',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Comments',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Comments',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Recommendations',
                how_id = how_category.id
            )

            fully_settle = HowQuestion.objects.create(
                question='Settle fully',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=fully_settle, option='Yes')
            HowQuestionOption.objects.create(question=fully_settle, option='No')
            
            partially_settle = HowQuestion.objects.create(
                question='Settle partially',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=partially_settle, option='Yes')
            HowQuestionOption.objects.create(question=partially_settle, option='No')
            
            refer = HowQuestion.objects.create(
                question='Refer',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=refer, option='Yes')
            HowQuestionOption.objects.create(question=refer, option='No')
            
            repudiate = HowQuestion.objects.create(
                question='Repudiate',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=repudiate, option='Yes')
            HowQuestionOption.objects.create(question=repudiate, option='No')
            
            recovery = HowQuestion.objects.create(
                question='Recovery',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=recovery, option='Yes')
            HowQuestionOption.objects.create(question=recovery, option='No')
            
            claim = HowQuestion.objects.create(
                question='Claim withdrawn?',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=claim, option='Yes')
            HowQuestionOption.objects.create(question=claim, option='No')
        
        elif item[1] == 'Motor':
            
            how_title = HowQuestionTitle.objects.create(
                title='SAPS Records',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Accident ref number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Police Station',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Date reported',
                question_type='date',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=False,
                has_date=True,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Amount Claimed',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Amount Claimed',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Repair and Replacement Cost',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Repairer name',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Address',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Date Received',
                question_type='date',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=False,
                has_date=True,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Quote',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Policy',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Insurer',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Policy number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Sum Insured',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Excess',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Comments',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Comments',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title= 'Recommendations',
                how_id = how_category.id
            )

            fully_settle = HowQuestion.objects.create(
                question='Settle fully',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=fully_settle, option='Yes')
            HowQuestionOption.objects.create(question=fully_settle, option='No')
            
            partially_settle = HowQuestion.objects.create(
                question='Settle partially',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=partially_settle, option='Yes')
            HowQuestionOption.objects.create(question=partially_settle, option='No')
            
            refer = HowQuestion.objects.create(
                question='Refer',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=refer, option='Yes')
            HowQuestionOption.objects.create(question=refer, option='No')
            
            repudiate = HowQuestion.objects.create(
                question='Repudiate',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=repudiate, option='Yes')
            HowQuestionOption.objects.create(question=repudiate, option='No')
            
            recovery = HowQuestion.objects.create(
                question='Recovery',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=recovery, option='Yes')
            HowQuestionOption.objects.create(question=recovery, option='No')
            
            claim = HowQuestion.objects.create(
                question='Claim withdrawn?',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=claim, option='Yes')
            HowQuestionOption.objects.create(question=claim, option='No')

        elif item[1] == "Property Loss":
            how_title = HowQuestionTitle.objects.create(
                title='SAPS Records',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Case number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Police Station',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Date reported',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            how_title = HowQuestionTitle.objects.create(
                title='Amount Claimed',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Amount Claimed',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            how_title = HowQuestionTitle.objects.create(
                title='Repair and Replacement Cost',
                how_id = how_category.id
            )

            valuations = HowQuestion.objects.create(
                question='Valuations',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=valuations, option='Yes')
            HowQuestionOption.objects.create(question=valuations, option='No')
            
            quotations = HowQuestion.objects.create(
                question='Quotations',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=quotations, option='Yes')
            HowQuestionOption.objects.create(question=quotations, option='No')

            HowQuestion.objects.create(
                question='Supplier Details',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Amount',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Policy',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Insurer',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Policy number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Sum Insured',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Excess',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Comments',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Comments',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            how_title = HowQuestionTitle.objects.create(
                title='Recommendations',
                how_id = how_category.id
            )

            fully_settle = HowQuestion.objects.create(
                question='Settle fully',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=fully_settle, option='Yes')
            HowQuestionOption.objects.create(question=fully_settle, option='No')
            
            partially_settle = HowQuestion.objects.create(
                question='Settle partially',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=partially_settle, option='Yes')
            HowQuestionOption.objects.create(question=partially_settle, option='No')
            
            refer = HowQuestion.objects.create(
                question='Refer',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=refer, option='Yes')
            HowQuestionOption.objects.create(question=refer, option='No')
            
            repudiate = HowQuestion.objects.create(
                question='Repudiate',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=repudiate, option='Yes')
            HowQuestionOption.objects.create(question=repudiate, option='No')
            
            recovery = HowQuestion.objects.create(
                question='Recovery',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=recovery, option='Yes')
            HowQuestionOption.objects.create(question=recovery, option='No')
            
            claim = HowQuestion.objects.create(
                question='Claim withdrawn?',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=claim, option='Yes')
            HowQuestionOption.objects.create(question=claim, option='No')

        elif item[1] == 'Property Damage':
            how_title = HowQuestionTitle.objects.create(
                title='Visible Damage',
                how_id = how_category.id
            )

            visible_damage = HowQuestion.objects.create(
                question='Visible damage',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=visible_damage, option='Yes')
            HowQuestionOption.objects.create(question=visible_damage, option='No')

            how_title = HowQuestionTitle.objects.create(
                title='Amount Claimed',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Amount Claimed',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Repair and Replacement Cost',
                how_id = how_category.id
            )

            valuations = HowQuestion.objects.create(
                question='Valuations',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=valuations, option='Yes')
            HowQuestionOption.objects.create(question=valuations, option='No')

            quotations = HowQuestion.objects.create(
                question='Quotations',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=quotations, option='Yes')
            HowQuestionOption.objects.create(question=quotations, option='No')

            HowQuestion.objects.create(
                question='Supplier Details',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Amount',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Policy',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Insurer',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Policy number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Sum Insured',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Excess',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Comments',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Comments',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Recommendations',
                how_id = how_category.id
            )

            fully_settle = HowQuestion.objects.create(
                question='Settle fully',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=fully_settle, option='Yes')
            HowQuestionOption.objects.create(question=fully_settle, option='No')
            
            partially_settle = HowQuestion.objects.create(
                question='Settle partially',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=partially_settle, option='Yes')
            HowQuestionOption.objects.create(question=partially_settle, option='No')
            
            refer = HowQuestion.objects.create(
                question='Refer',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=refer, option='Yes')
            HowQuestionOption.objects.create(question=refer, option='No')
            
            repudiate = HowQuestion.objects.create(
                question='Repudiate',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=repudiate, option='Yes')
            HowQuestionOption.objects.create(question=repudiate, option='No')
            
            recovery = HowQuestion.objects.create(
                question='Recovery',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=recovery, option='Yes')
            HowQuestionOption.objects.create(question=recovery, option='No')
           
            claim = HowQuestion.objects.create(
                question='Claim withdrawn?',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
           
            HowQuestionOption.objects.create(question=claim, option='Yes')
            HowQuestionOption.objects.create(question=claim, option='No')

            how_title = HowQuestionTitle.objects.create(
                title='SAPS Records',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Case number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Police Station',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Date reported',
                question_type='date',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=False,
                has_date=True,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )



def create_how_and_cause_business(apps, schema_editor):
    HowCategory = apps.get_model('claims', 'HowCategory')
    CauseCategory = apps.get_model('claims', 'CauseCategory')
    HowQuestionTitle = apps.get_model('claims', 'HowQuestionTitle')
    HowQuestionOption = apps.get_model('claims', 'HowQuestionOption')
    HowQuestion = apps.get_model('claims', 'HowQuestion')

    items = [
                ('Hijacking', 'Financial Loss'), 
                ('Theft', 'Financial Loss'),
                ('Accidental Damage', 'Property Damage'), 
                ('Armed Robbery', 'Property Damage'),
                ('Burglary', 'Property Damage'),
                ('Collision', 'Property Damage'), 
                ('Earthquake', 'Property Damage'),
                ('Explosion', 'Property Damage'), 
                ('Fire', 'Property Damage'),
                ('Hail or Snow', 'Property Damage'), 
                ('Hijacking', 'Property Damage'),
                ('Lightning', 'Property Damage'), 
                ('Malicious Damage', 'Property Damage'),
                ('Overturning', 'Property Damage'), 
                ('Power Surge', 'Property Damage'),
                ('Storm', 'Property Damage'), 
                ('Theft', 'Property Damage'),
                ('Riot or Unrest', 'Property Damage'),
                ('Water', 'Property Damage'), 
                ('Wind', 'Property Damage'),
                ('Accidental Damage', 'Property Loss'), 
                ('Armed Robbery', 'Property Loss'),
                ('Burglary', 'Property Loss'),
                ('Collision', 'Property Loss'), 
                ('Earthquake', 'Property Loss'),
                ('Explosion', 'Property Loss'), 
                ('Fire', 'Property Loss'),
                ('Hail or Snow', 'Property Loss'), 
                ('Hijacking', 'Property Loss'),
                ('Lightning', 'Property Loss'), 
                ('Malicious Damage', 'Property Loss'),
                ('Overturning', 'Property Loss'), 
                ('Power Surge', 'Property Loss'),
                ('Storm', 'Property Loss'), 
                ('Theft', 'Property Loss'),
                ('Riot or Unrest', 'Property Loss'),
                ('Water', 'Property Loss'), 
                ('Wind', 'Property Loss'),
                ('Accidental - Own Damage', 'Motor'), 
                ('Accident - 3rd Party Damage', 'Motor'),
                ('Theft and Recovered', 'Motor'), 
                ('Hijacking', 'Motor'), 
                ('Theft', 'Motor'),
                ('Accidental - Own Damage', 'Financial Loss'),
                ('Accident - 3rd Party Damage', 'Financial Loss'),
                ('Theft and Recovered', 'Financial Loss') 
            ]

    for item in items:
        how_category = HowCategory.objects.create(
            cause=CauseCategory.objects.get(
                name=item[1],
                application_type_id__name = BUSINESS
                ),
            name=item[0]
        ) 

        if item[1] == 'Financial Loss':
            
            how_title = HowQuestionTitle.objects.create(
                title='Financial Records',
                how_id = how_category.id
            )

            records_available = HowQuestion.objects.create(
                question='Available',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=records_available, option='Yes')
            HowQuestionOption.objects.create(question=records_available, option='No')
        
            how_title = HowQuestionTitle.objects.create(
                title='Calculations',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Name',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestion.objects.create(
                question='Amount',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Amount Claimed',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Amount Claimed',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Policy',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Insurer',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Policy number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Sum Insured',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Excess',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Comments',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Comments',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Recommendations',
                how_id = how_category.id
            )

            fully_settle = HowQuestion.objects.create(
                question='Settle fully',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=fully_settle, option='Yes')
            HowQuestionOption.objects.create(question=fully_settle, option='No')
            
            partially_settle = HowQuestion.objects.create(
                question='Settle partially',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=partially_settle, option='Yes')
            HowQuestionOption.objects.create(question=partially_settle, option='No')
            
            refer = HowQuestion.objects.create(
                question='Refer',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=refer, option='Yes')
            HowQuestionOption.objects.create(question=refer, option='No')
            
            repudiate = HowQuestion.objects.create(
                question='Repudiate',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=repudiate, option='Yes')
            HowQuestionOption.objects.create(question=repudiate, option='No')
            
            recovery = HowQuestion.objects.create(
                question='Recovery',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=recovery, option='Yes')
            HowQuestionOption.objects.create(question=recovery, option='No')
            
            claim = HowQuestion.objects.create(
                question='Claim withdrawn?',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=claim, option='Yes')
            HowQuestionOption.objects.create(question=claim, option='No')
        
        elif item[1] == 'Motor':
            
            how_title = HowQuestionTitle.objects.create(
                title='SAPS Records',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Accident ref number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Police Station',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Date reported',
                question_type='date',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=False,
                has_date=True,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Amount Claimed',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Amount Claimed',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Repair and Replacement Cost',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Repairer name',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Address',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Date Received',
                question_type='date',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=False,
                has_date=True,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Quote',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Policy',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Insurer',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Policy number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Sum Insured',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Excess',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Comments',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Comments',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title= 'Recommendations',
                how_id = how_category.id
            )

            fully_settle = HowQuestion.objects.create(
                question='Settle fully',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=fully_settle, option='Yes')
            HowQuestionOption.objects.create(question=fully_settle, option='No')
            
            partially_settle = HowQuestion.objects.create(
                question='Settle partially',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=partially_settle, option='Yes')
            HowQuestionOption.objects.create(question=partially_settle, option='No')
            
            refer = HowQuestion.objects.create(
                question='Refer',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=refer, option='Yes')
            HowQuestionOption.objects.create(question=refer, option='No')
            
            repudiate = HowQuestion.objects.create(
                question='Repudiate',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=repudiate, option='Yes')
            HowQuestionOption.objects.create(question=repudiate, option='No')
            
            recovery = HowQuestion.objects.create(
                question='Recovery',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=recovery, option='Yes')
            HowQuestionOption.objects.create(question=recovery, option='No')
            
            claim = HowQuestion.objects.create(
                question='Claim withdrawn?',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=claim, option='Yes')
            HowQuestionOption.objects.create(question=claim, option='No')

        elif item[1] == "Property Loss":
            how_title = HowQuestionTitle.objects.create(
                title='SAPS Records',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Case number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Police Station',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Date reported',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            how_title = HowQuestionTitle.objects.create(
                title='Amount Claimed',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Amount Claimed',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            how_title = HowQuestionTitle.objects.create(
                title='Repair and Replacement Cost',
                how_id = how_category.id
            )

            valuations = HowQuestion.objects.create(
                question='Valuations',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=valuations, option='Yes')
            HowQuestionOption.objects.create(question=valuations, option='No')
            
            quotations = HowQuestion.objects.create(
                question='Quotations',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=quotations, option='Yes')
            HowQuestionOption.objects.create(question=quotations, option='No')

            HowQuestion.objects.create(
                question='Supplier Details',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Amount',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Policy',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Insurer',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Policy number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Sum Insured',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Excess',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Comments',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Comments',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            how_title = HowQuestionTitle.objects.create(
                title='Recommendations',
                how_id = how_category.id
            )

            fully_settle = HowQuestion.objects.create(
                question='Settle fully',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=fully_settle, option='Yes')
            HowQuestionOption.objects.create(question=fully_settle, option='No')
            
            partially_settle = HowQuestion.objects.create(
                question='Settle partially',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=partially_settle, option='Yes')
            HowQuestionOption.objects.create(question=partially_settle, option='No')
            
            refer = HowQuestion.objects.create(
                question='Refer',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestionOption.objects.create(question=refer, option='Yes')
            HowQuestionOption.objects.create(question=refer, option='No')
            
            repudiate = HowQuestion.objects.create(
                question='Repudiate',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=repudiate, option='Yes')
            HowQuestionOption.objects.create(question=repudiate, option='No')
            
            recovery = HowQuestion.objects.create(
                question='Recovery',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=recovery, option='Yes')
            HowQuestionOption.objects.create(question=recovery, option='No')
            
            claim = HowQuestion.objects.create(
                question='Claim withdrawn?',
                question_type='selection',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=claim, option='Yes')
            HowQuestionOption.objects.create(question=claim, option='No')

        elif item[1] == 'Property Damage':
            how_title = HowQuestionTitle.objects.create(
                title='Visible Damage',
                how_id = how_category.id
            )

            visible_damage = HowQuestion.objects.create(
                question='Visible damage',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=visible_damage, option='Yes')
            HowQuestionOption.objects.create(question=visible_damage, option='No')

            how_title = HowQuestionTitle.objects.create(
                title='Amount Claimed',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Amount Claimed',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Repair and Replacement Cost',
                how_id = how_category.id
            )

            valuations = HowQuestion.objects.create(
                question='Valuations',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=valuations, option='Yes')
            HowQuestionOption.objects.create(question=valuations, option='No')

            quotations = HowQuestion.objects.create(
                question='Quotations',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestionOption.objects.create(question=quotations, option='Yes')
            HowQuestionOption.objects.create(question=quotations, option='No')

            HowQuestion.objects.create(
                question='Supplier Details',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Amount',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Policy',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Insurer',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            HowQuestion.objects.create(
                question='Policy number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Sum Insured',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Excess',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Comments',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Comments',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )

            how_title = HowQuestionTitle.objects.create(
                title='Recommendations',
                how_id = how_category.id
            )

            fully_settle = HowQuestion.objects.create(
                question='Settle fully',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=fully_settle, option='Yes')
            HowQuestionOption.objects.create(question=fully_settle, option='No')
            
            partially_settle = HowQuestion.objects.create(
                question='Settle partially',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=partially_settle, option='Yes')
            HowQuestionOption.objects.create(question=partially_settle, option='No')
            
            refer = HowQuestion.objects.create(
                question='Refer',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=refer, option='Yes')
            HowQuestionOption.objects.create(question=refer, option='No')
            
            repudiate = HowQuestion.objects.create(
                question='Repudiate',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=repudiate, option='Yes')
            HowQuestionOption.objects.create(question=repudiate, option='No')
            
            recovery = HowQuestion.objects.create(
                question='Recovery',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            
            HowQuestionOption.objects.create(question=recovery, option='Yes')
            HowQuestionOption.objects.create(question=recovery, option='No')
           
            claim = HowQuestion.objects.create(
                question='Claim withdrawn?',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=True,
                has_text=False,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
           
            HowQuestionOption.objects.create(question=claim, option='Yes')
            HowQuestionOption.objects.create(question=claim, option='No')

            how_title = HowQuestionTitle.objects.create(
                title='SAPS Records',
                how_id = how_category.id
            )

            HowQuestion.objects.create(
                question='Case number',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Police Station',
                question_type='text',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=True,
                has_date=False,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )
            HowQuestion.objects.create(
                question='Date reported',
                question_type='date',
                is_mandatory=True,
                has_checkbox=False,
                has_selection=False,
                has_text=False,
                has_date=True,
                has_file=False,
                has_other_field=False,
                has_location=False,
                how_title_id = how_title.id
            )


def create_what_and_cause_personal(apps, schema_editor):
    WhatCategory = apps.get_model('claims', 'WhatCategory')
    CauseCategory = apps.get_model('claims', 'CauseCategory')
    WhatQuestionTitle = apps.get_model('claims', 'WhatQuestionTitle')

    items = [
             ('Buildings', 'Property Damage'), 
             ('Cellphones or Tablets', 'Property Damage'),
             ('Documents', 'Property Damage'),
             ('Equipment', 'Property Damage'), 
             ('Electronic Equipment', 'Property Damage'),
             ('Fixtures and Fittings', 'Property Damage'),
             ('Geysers', 'Property Damage'),
             ('Glass', 'Property Damage'),
             ('Goods in Transit', 'Property Damage'), 
             ('Home Contents', 'Property Damage'),
             ('Jewellery', 'Property Damage'),
             ('Laptops', 'Property Damage'), 
             ('Money', 'Property Damage'),
             ('Other Specified Items', 'Property Damage'),
             ('Plants and Machinery', 'Property Damage'),
             ('Photographic Equipment', 'Property Damage'),
             ('Pumps and Motors', 'Property Damage'),
             ('Sports and Hobby Equipment', 'Property Damage'),
             ('Stock', 'Property Damage'),
             ('Office Contents', 'Property Damage'),

             ('Buildings', 'Property Loss'), 
             ('Cellphones or Tablets', 'Property Loss'),
             ('Documents', 'Property Loss'),
             ('Equipment', 'Property Loss'), 
             ('Electronic Equipment', 'Property Loss'),
             ('Fixtures and Fittings', 'Property Loss'),
             ('Geysers', 'Property Loss'), 
             ('Glass', 'Property Loss'),
             ('Goods in Transit', 'Property Loss'), 
             ('Home Contents', 'Property Loss'),
             ('Jewellery', 'Property Loss'), 
             ('Laptops', 'Property Loss'),
             ('Money', 'Property Loss'), 
             ('Other Specified Items', 'Property Loss'),
             ('Plants and Machinery', 'Property Loss'), 
             ('Photographic Equipment', 'Property Loss'),
             ('Pumps and Motors', 'Property Loss'),
             ('Sports and Hobby Equipment', 'Property Loss'), 
             ('Stock', 'Property Loss'),
             ('Office Contents', 'Property Loss'),

             ('Business Vehicle', 'Motor'), 
             ('Caravan', 'Motor'), 
             ('HCV', 'Motor'),
             ('LDV', 'Motor'),
             ('Leisure Craft', 'Motor'), 
             ('Motocycle or Scooter', 'Motor'),
             ('Private Vehicle', 'Motor'),
             ('Tractor', 'Motor'), 
             ('Trailer or Towable', 'Motor'),
             ('Truck', 'Motor'),
    
             ('Business Interruption', 'Financial Loss'), 
             ('Money', 'Financial Loss'),
             ('Rent', 'Financial Loss'), 
             ]
    for item in items:
        what_category = WhatCategory.objects.create(
            cause=CauseCategory.objects.get(
                name=item[1],
                application_type_id__name = PERSONAL
                ),
            name=item[0]
        ) 
        WhatQuestionTitle.objects.create(
            title=item[0],
            what_id = what_category.id
        )


def create_what_and_cause_business(apps, schema_editor):
    WhatCategory = apps.get_model('claims', 'WhatCategory')
    CauseCategory = apps.get_model('claims', 'CauseCategory')
    WhatQuestionTitle = apps.get_model('claims', 'WhatQuestionTitle')

    items = [
             ('Buildings', 'Property Damage'), 
             ('Cellphones or Tablets', 'Property Damage'),
             ('Documents', 'Property Damage'),
             ('Equipment', 'Property Damage'), 
             ('Electronic Equipment', 'Property Damage'),
             ('Fixtures and Fittings', 'Property Damage'),
             ('Geysers', 'Property Damage'),
             ('Glass', 'Property Damage'),
             ('Goods in Transit', 'Property Damage'), 
             ('Home Contents', 'Property Damage'),
             ('Jewellery', 'Property Damage'),
             ('Laptops', 'Property Damage'), 
             ('Money', 'Property Damage'),
             ('Other Specified Items', 'Property Damage'),
             ('Plants and Machinery', 'Property Damage'),
             ('Photographic Equipment', 'Property Damage'),
             ('Pumps and Motors', 'Property Damage'),
             ('Sports and Hobby Equipment', 'Property Damage'),
             ('Stock', 'Property Damage'),
             ('Office Contents', 'Property Damage'),

             ('Buildings', 'Property Loss'), 
             ('Cellphones or Tablets', 'Property Loss'),
             ('Documents', 'Property Loss'),
             ('Equipment', 'Property Loss'), 
             ('Electronic Equipment', 'Property Loss'),
             ('Fixtures and Fittings', 'Property Loss'),
             ('Geysers', 'Property Loss'), 
             ('Glass', 'Property Loss'),
             ('Goods in Transit', 'Property Loss'), 
             ('Home Contents', 'Property Loss'),
             ('Jewellery', 'Property Loss'), 
             ('Laptops', 'Property Loss'),
             ('Money', 'Property Loss'), 
             ('Other Specified Items', 'Property Loss'),
             ('Plants and Machinery', 'Property Loss'), 
             ('Photographic Equipment', 'Property Loss'),
             ('Pumps and Motors', 'Property Loss'),
             ('Sports and Hobby Equipment', 'Property Loss'), 
             ('Stock', 'Property Loss'),
             ('Office Contents', 'Property Loss'),

             ('Business Vehicle', 'Motor'), 
             ('Caravan', 'Motor'), 
             ('HCV', 'Motor'),
             ('LDV', 'Motor'),
             ('Leisure Craft', 'Motor'), 
             ('Motocycle or Scooter', 'Motor'),
             ('Private Vehicle', 'Motor'),
             ('Tractor', 'Motor'), 
             ('Trailer or Towable', 'Motor'),
             ('Truck', 'Motor'),
    
             ('Business Interruption', 'Financial Loss'), 
             ('Money', 'Financial Loss'),
             ('Rent', 'Financial Loss'), 
             ]
    
    for item in items:
        what_category = WhatCategory.objects.create(
            cause=CauseCategory.objects.get(
                name=item[1],
                application_type_id__name = BUSINESS
                ),
            name=item[0]
        ) 
        WhatQuestionTitle.objects.create(
            title=item[0],
            what_id = what_category.id
        )


def add_what_questions_business(apps, schema_editor):
    
    list_questions = [
        ('Occupied', 'Buildings', 'text'),
        ('Tenant type', 'Buildings', 'text'),
        ('Structure type', 'Buildings', 'text'),

        ('Make', 'Geysers', 'text'),
        ('Capacity', 'Geysers', 'text'),
        ('Date acquired', 'Geysers', 'date'),

        ('Description', 'Glass', 'text'),
        ('Dimensions', 'Glass', 'text'),

        ('Description', 'Fixtures and Fittings', 'text'),
        ('Make  |  Model', 'Fixtures and Fittings', 'text'),
        ('Date acquired', 'Fixtures and Fittings', 'date'),

        ('Description', 'Plants and Machinery', 'text'),
        ('Make  |  Model', 'Plants and Machinery', 'text'),
        ('Date acquired', 'Plants and Machinery', 'date'),

        ('Description', 'Pumps and Motors', 'text'),
        ('Make  |  Model', 'Pumps and Motors', 'text'),
        ('Date acquired', 'Pumps and Motors', 'date'),

        ('Description', 'Equipment', 'text'),
        ('Make  |  Model', 'Equipment', 'text'),
        ('Date acquired', 'Equipment', 'date'),

        ('Type', 'Stock', 'text'),
        ('Supplier/s', 'Stock', 'text'),
        ('Date acquired', 'Stock', 'date'),

        ('Description', 'Office Contents', 'text'),
        ('Make  |  Model', 'Office Contents', 'text'),
        ('Date acquired', 'Office Contents', 'date'),

        ('Type', 'Documents', 'text'),

        ('Type', 'Goods in Transit', 'text'),
        ('Supplier/s', 'Goods in Transit', 'text'),
        ('Date acquired', 'Goods in Transit', 'date'),

        ('Description', 'Electronic Equipment', 'text'),
        ('Make  |  Model', 'Electronic Equipment', 'text'),
        ('Date acquired', 'Electronic Equipment', 'date'),

        ('Description', 'Other Specified Items', 'text'),
        ('Make  |  Model', 'Other Specified Items', 'text'),
        ('Date acquired', 'Other Specified Items', 'date'),

        ('Amount', 'Rent', 'text'),
        ('Frequency', 'Rent', 'text'),
        ('Period', 'Rent', 'text'),

        ('Amount', 'Money', 'text'),
        ('Type', 'Money', 'text'),

        ('Amount', 'Business Interruption', 'text'),
        ('Frequency', 'Business Interruption', 'text'),
        ('Period', 'Business Interruption', 'text'),

        ('Make', 'Private Vehicle', 'text'),
        ('Model', 'Private Vehicle', 'text'),
        ('Reg', 'Private Vehicle', 'text'),

        ('Make', 'Business Vehicle', 'text'),
        ('Model', 'Business Vehicle', 'text'),
        ('Reg', 'Business Vehicle', 'text'),

        ('Make', 'LDV', 'text'),
        ('Model', 'LDV', 'text'),
        ('Reg', 'LDV', 'text'),

        ('Make', 'Truck', 'text'),
        ('Model', 'Truck', 'text'),
        ('Reg', 'Truck', 'text'),

        ('Make', 'HCV', 'text'),
        ('Model', 'HCV', 'text'),
        ('Reg', 'HCV', 'text'),

        ('Make', 'Trailer or Towable', 'text'),
        ('Model', 'Trailer or Towable', 'text'),
        ('Reg', 'Trailer or Towable', 'text'),

        ('Make', 'Motocycle or Scooter', 'text'),
        ('Model', 'Motocycle or Scooter', 'text'),
        ('Reg', 'Motocycle or Scooter', 'text'),

        ('Make', 'Leisure Craft', 'text'),
        ('Model', 'Leisure Craft', 'text'),

        ('Description', 'Cellphones or Tablets', 'text'),
        ('Make  |  Model', 'Cellphones or Tablets', 'text'),
        ('Date acquired', 'Cellphones or Tablets', 'date'),

        ('Description', 'Jewellery', 'text'),
        ('Valuation Cert', 'Jewellery', 'text'),
        ('Date acquired', 'Jewellery', 'date'),

        ('Description', 'Home Contents', 'text'),
        ('Make  |  Model', 'Home Contents', 'text'),
        ('Date acquired', 'Home Contents', 'date'),

        ('Make', 'Tractor', 'text'),
        ('Model', 'Tractor', 'text'),
        ('Reg', 'Tractor', 'text'),

        ('Description', 'Photographic Equipment', 'text'),
        ('Make  |  Model', 'Photographic Equipment', 'text'),
        ('Date acquired', 'Photographic Equipment', 'date'),

        ('Make', 'Caravan', 'text'),
        ('Model', 'Caravan', 'text'),
        ('Reg', 'Caravan', 'text'),

        ('Description', 'Laptops', 'text'),
        ('Make  |  Model', 'Laptops', 'text'),
        ('Date acquired', 'Laptops', 'date'),

        ('Description', 'Sports and Hobby Equipment', 'text'),
        ('Make  |  Model', 'Sports and Hobby Equipment', 'text'),
        ('Date acquired', 'Sports and Hobby Equipment', 'date'),
    ]

    [
        create_question_business(item, apps)
        for item in list_questions
    ]


def create_question_business(item, apps):
    Question = apps.get_model('claims', 'WhatQuestion')
    WhatQuestionTitle = apps.get_model('claims', 'WhatQuestionTitle')
    what_titles = WhatQuestionTitle.objects.filter(
        title=item[1],
        what_id__cause_id__application_type_id__name = BUSINESS
    ).values('id')

    if what_titles.count() == 1:

        what_title = WhatQuestionTitle.objects.get(
            title=item[1],
            what_id__cause_id__application_type_id__name = BUSINESS
        )

        has_checkbox=False
        has_selection=False
        has_text=False
        has_date=False
        has_file=False
        has_other_field=False
        has_location=False
        
        question_type=item[2]

        if question_type == 'text':
            has_text=True
        
        elif question_type == 'date':
            has_date=True

        Question.objects.create(
            question=item[0],
            question_type=question_type,
            is_mandatory=True,
            has_checkbox=has_checkbox,
            has_selection=has_selection,
            has_text=has_text,
            has_date=has_date,
            has_file=has_file,
            has_other_field=has_other_field,
            has_location=has_location,
            what_title_id = what_title.id
        )
        return
    else:
        what_titles = what_titles.values_list('id', flat=True)
        
        for id_value in what_titles:
            what_title = WhatQuestionTitle.objects.get(id = id_value)
            has_checkbox=False
            has_selection=False
            has_text=False
            has_date=False
            has_file=False
            has_other_field=False
            has_location=False
            
            question_type=item[2]

            if question_type == 'text':
                has_text=True
            
            elif question_type == 'date':
                has_date=True

            Question.objects.create(
                question=item[0],
                question_type=question_type,
                is_mandatory=True,
                has_checkbox=has_checkbox,
                has_selection=has_selection,
                has_text=has_text,
                has_date=has_date,
                has_file=has_file,
                has_other_field=has_other_field,
                has_location=has_location,
                what_title_id = what_title.id
            )
        return


def add_what_questions_personal(apps, schema_editor):
    list_questions = [
        ('Occupied', 'Buildings', 'text'),
        ('Tenant type', 'Buildings', 'text'),
        ('Structure type', 'Buildings', 'text'),

        ('Make', 'Geysers', 'text'),
        ('Capacity', 'Geysers', 'text'),
        ('Date acquired', 'Geysers', 'date'),

        ('Description', 'Glass', 'text'),
        ('Dimensions', 'Glass', 'text'),

        ('Description', 'Fixtures and Fittings', 'text'),
        ('Make  |  Model', 'Fixtures and Fittings', 'text'),
        ('Date acquired', 'Fixtures and Fittings', 'date'),

        ('Description', 'Plants and Machinery', 'text'),
        ('Make  |  Model', 'Plants and Machinery', 'text'),
        ('Date acquired', 'Plants and Machinery', 'date'),

        ('Description', 'Pumps and Motors', 'text'),
        ('Make  |  Model', 'Pumps and Motors', 'text'),
        ('Date acquired', 'Pumps and Motors', 'date'),

        ('Description', 'Equipment', 'text'),
        ('Make  |  Model', 'Equipment', 'text'),
        ('Date acquired', 'Equipment', 'date'),

        ('Type', 'Stock', 'text'),
        ('Supplier/s', 'Stock', 'text'),
        ('Date acquired', 'Stock', 'date'),

        ('Description', 'Office Contents', 'text'),
        ('Make  |  Model', 'Office Contents', 'text'),
        ('Date acquired', 'Office Contents', 'date'),

        ('Type', 'Documents', 'text'),

        ('Type', 'Goods in Transit', 'text'),
        ('Supplier/s', 'Goods in Transit', 'text'),
        ('Date acquired', 'Goods in Transit', 'date'),

        ('Description', 'Electronic Equipment', 'text'),
        ('Make  |  Model', 'Electronic Equipment', 'text'),
        ('Date acquired', 'Electronic Equipment', 'date'),

        ('Description', 'Other Specified Items', 'text'),
        ('Make  |  Model', 'Other Specified Items', 'text'),
        ('Date acquired', 'Other Specified Items', 'date'),

        ('Amount', 'Rent', 'text'),
        ('Frequency', 'Rent', 'text'),
        ('Period', 'Rent', 'text'),

        ('Amount', 'Money', 'text'),
        ('Type', 'Money', 'text'),

        ('Amount', 'Business Interruption', 'text'),
        ('Frequency', 'Business Interruption', 'text'),
        ('Period', 'Business Interruption', 'text'),

        ('Make', 'Private Vehicle', 'text'),
        ('Model', 'Private Vehicle', 'text'),
        ('Reg', 'Private Vehicle', 'text'),

        ('Make', 'Business Vehicle', 'text'),
        ('Model', 'Business Vehicle', 'text'),
        ('Reg', 'Business Vehicle', 'text'),

        ('Make', 'LDV', 'text'),
        ('Model', 'LDV', 'text'),
        ('Reg', 'LDV', 'text'),

        ('Make', 'Truck', 'text'),
        ('Model', 'Truck', 'text'),
        ('Reg', 'Truck', 'text'),

        ('Make', 'HCV', 'text'),
        ('Model', 'HCV', 'text'),
        ('Reg', 'HCV', 'text'),

        ('Make', 'Trailer or Towable', 'text'),
        ('Model', 'Trailer or Towable', 'text'),
        ('Reg', 'Trailer or Towable', 'text'),

        ('Make', 'Motocycle or Scooter', 'text'),
        ('Model', 'Motocycle or Scooter', 'text'),
        ('Reg', 'Motocycle or Scooter', 'text'),

        ('Make', 'Leisure Craft', 'text'),
        ('Model', 'Leisure Craft', 'text'),
        
        ('Description', 'Cellphones or Tablets', 'text'),
        ('Make  |  Model', 'Cellphones or Tablets', 'text'),
        ('Date acquired', 'Cellphones or Tablets', 'date'),

        ('Description', 'Jewellery', 'text'),
        ('Valuation Cert', 'Jewellery', 'text'),
        ('Date acquired', 'Jewellery', 'date'),

        ('Description', 'Home Contents', 'text'),
        ('Make  |  Model', 'Home Contents', 'text'),
        ('Date acquired', 'Home Contents', 'date'),

        ('Make', 'Tractor', 'text'),
        ('Model', 'Tractor', 'text'),
        ('Reg', 'Tractor', 'text'),

        ('Description', 'Photographic Equipment', 'text'),
        ('Make  |  Model', 'Photographic Equipment', 'text'),
        ('Date acquired', 'Photographic Equipment', 'date'),

        ('Make', 'Caravan', 'text'),
        ('Model', 'Caravan', 'text'),
        ('Reg', 'Caravan', 'text'),

        ('Description', 'Laptops', 'text'),
        ('Make  |  Model', 'Laptops', 'text'),
        ('Date acquired', 'Laptops', 'date'),

        ('Description', 'Sports and Hobby Equipment', 'text'),
        ('Make  |  Model', 'Sports and Hobby Equipment', 'text'),
        ('Date acquired', 'Sports and Hobby Equipment', 'date'),
    ]

    [
        create_question_personal(item, apps)
        for item in list_questions
    ]


def create_question_personal(item, apps):
    Question = apps.get_model('claims', 'WhatQuestion')
    WhatQuestionTitle = apps.get_model('claims', 'WhatQuestionTitle')

    what_titles = WhatQuestionTitle.objects.filter(
        title=item[1],
        what_id__cause_id__application_type_id__name = PERSONAL
    ).values('id')

    if what_titles.count() == 1:
        
        what_title = WhatQuestionTitle.objects.get(
            title=item[1],
            what_id__cause_id__application_type_id__name = PERSONAL
        )

        has_checkbox=False
        has_selection=False
        has_text=False
        has_date=False
        has_file=False
        has_other_field=False
        has_location=False
        
        question_type=item[2]

        if question_type == 'text':
            has_text=True
        
        elif question_type == 'date':
            has_date=True

        Question.objects.create(
            question=item[0],
            question_type=question_type,
            is_mandatory=True,
            has_checkbox=has_checkbox,
            has_selection=has_selection,
            has_text=has_text,
            has_date=has_date,
            has_file=has_file,
            has_other_field=has_other_field,
            has_location=has_location,
            what_title_id = what_title.id
        )
        return
    else:
        what_titles = what_titles.values_list('id', flat=True)
        
        for id_value in what_titles:
            what_title = WhatQuestionTitle.objects.get(id = id_value)
            has_checkbox=False
            has_selection=False
            has_text=False
            has_date=False
            has_file=False
            has_other_field=False
            has_location=False
            
            question_type=item[2]

            if question_type == 'text':
                has_text=True
            
            elif question_type == 'date':
                has_date=True

            Question.objects.create(
                question=item[0],
                question_type=question_type,
                is_mandatory=True,
                has_checkbox=has_checkbox,
                has_selection=has_selection,
                has_text=has_text,
                has_date=has_date,
                has_file=has_file,
                has_other_field=has_other_field,
                has_location=has_location,
                what_title_id = what_title.id
            )
        return


class Migration(migrations.Migration):

    dependencies = [
        ('claims', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_cause_personal),
        migrations.RunPython(create_cause_business),
        migrations.RunPython(create_how_and_cause_personal),
        migrations.RunPython(create_how_and_cause_business),
        migrations.RunPython(create_what_and_cause_personal),
        migrations.RunPython(create_what_and_cause_business),
        migrations.RunPython(add_what_questions_personal),
        migrations.RunPython(add_what_questions_business),
    ]